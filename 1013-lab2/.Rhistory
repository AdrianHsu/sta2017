apply(newdat1, 1, mean) # 1: row vector, 共330個mean
apply(newdat1, 2, quantile)
apply(newdat1, 2, function(x) quantile(x,probs=seq(0,1,0.1))) # 自定義function
# lapply, sapply
sort(newdat1$age) # 從小到大
ord<-order(newdat1$age) # 從小到大排的話，原本的index對應到新的index是多少
newdat1$age[ord] # 用ord 去排
dat<-read.table('pheno_com_short.txt', header=TRUE, row.names = 1)
newdat<-cbind(dat$age, dat$AD, dat$DDAST)
dat
dat<-read.table('pheno_com.txt', header=TRUE, row.names = 1)
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/0929-lab1")
dat<-read.table('pheno_com.txt', header=TRUE, row.names = 1)
newdat<-cbind(dat$age, dat$AD, dat$DDAST)
newdat1<-as.data.frame(newdat) #轉成 data.frame的指令
colnames(newdat1)<-c("age", "AD", "DDAST")
# 敘述統計
sum(newdat1$age)
# max min median mean...
var(newdat1$age)
sd(newdat1$age)
sum(newdat1$age) / length(newdat1$age)
quantile(newdat1$age)
quantile(newdat1$age, probs=c(0, 1/3, 2/3, 1))
quantile(newdat1$age, probs=seq(0, 1,0.1))
apply(newdat1, 2, mean) # 2: column vector, 共3個mean
apply(newdat1, 1, mean) # 1: row vector, 共330個mean
apply(newdat1, 2, quantile)
apply(newdat1, 2, function(x) quantile(x,probs=seq(0,1,0.1))) # 自定義function
# lapply, sapply
sort(newdat1$age) # 從小到大
ord<-order(newdat1$age) # 從小到大排的話，原本的index對應到新的index是多少
newdat1$age[ord] # 用ord 去排
newdat1
newdat1$age[ord]
newdat1$age
newdat1
newdat1$age[ord]
orderrr<-order(newdat1$age, decreasing=TRUE)
orderr
orderrr
newdat1$age[orderr]
orderr<-order(newdat1$age, decreasing=TRUE) # 從大到小排的話，原本的index對應到新的index是多少
newdat1$age[orderr]
sort(newdat1$age, orderr)
sort
newdat1$age[orderr]
plot(newdat1$age[orderr], main="my titleee", xlab="xlab bla", ylab="ylab bla")
abline(h=min(newdat1$age), col="red")# 在最小值畫一條線
abline(h=max(newdat1$age), col="blue")# 在最大值畫一條線
plot(newdat1$age[orderr], type="h") # p, l, h, s
plot(newdat1$age[orderr], type="s") # p, l, h, s
plot(newdat1$age[orderr], type="h") # p, l, h, s
points(newdat1$age[ord], type="l")
hist(newdat1$age, br=20) # 共分成幾格
boxplot(newdat1$age)
boxplot(newdat1$age[1:100], newdat1$age[100, 200]) #
boxplot(newdat1$age[1:100], newdat1$age[101: 200]) #
boxplot(newdat1$age[1:100], newdat1$age[101: 300]) #
heatmap.2(newdat.std, trace="none", col=redgreen)
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/0929-lab1")
dat<-read.table('pheno_com.txt', header=TRUE, row.names = 1)
newdat<-cbind(dat$age, dat$AD, dat$DDAST)
newdat1<-as.data.frame(newdat) #轉成 data.frame的指令
colnames(newdat1)<-c("age", "AD", "DDAST")
# 敘述統計
sum(newdat1$age)
# max min median mean...
var(newdat1$age)
sd(newdat1$age)
sum(newdat1$age) / length(newdat1$age)
quantile(newdat1$age)
quantile(newdat1$age, probs=c(0, 1/3, 2/3, 1))
quantile(newdat1$age, probs=seq(0, 1,0.1))
apply(newdat1, 2, mean) # 2: column vector, 共3個mean
apply(newdat1, 1, mean) # 1: row vector, 共330個mean
apply(newdat1, 2, quantile)
apply(newdat1, 2, function(x) quantile(x,probs=seq(0,1,0.1))) # 自定義function
# lapply, sapply
# 用在：拿age當comparator, 其他column就跟著sort
sort(newdat1$age) # 從小到大排，其實就跟order順序一樣
ord<-order(newdat1$age) # 從小到大排的話，原本的index對應到新的index是多少
newdat1$age[ord] # 把age用order排序
orderr<-order(newdat1$age, decreasing=TRUE) # 從大到小排的話，原本的index對應到新的index是多少
newdat1$age[orderr]
plot(newdat1$age[orderr], main="my titleee", xlab="xlab bla", ylab="ylab bla")
abline(h=min(newdat1$age), col="red")# 在最小值畫一條線
abline(h=max(newdat1$age), col="blue")# 在最大值畫一條線
# 預設是一個個點
plot(newdat1$age[orderr], type="h") # p, l, h, s
# 如果要在plot 上加一條新的線，不能再打一次plot(會創造新圖)，而是用point
points(newdat1$age[ord], type="l") #加一條type=l的在原圖上
hist(newdat1$age, br=20) # 共分成幾格
boxplot(newdat1$age[1:100], newdat1$age[101: 300]) # 1~100做一個box, 101~300 做一個box
# heatmap怎用
newdat.std<-(t(newdat)-apply(newdat, 2, mean))/apply(newdat, 2, sd)
install.packages("gplots")
library(gplots)
heatmap.2(newdat.std, trace="none", col=redgreen)
apply(newdat, 2, sd)
newdat
t(newdat)
newdat
t(newdat)
newdat.std<-(t(newdat)-apply(newdat, 2, mean))/apply(newdat, 2, sd)
sd
sd(newdat)
newdat
sd(newdat, 1)
sd(newdat, 2)
sd(newdat, 2)
apply(newdat, 2, sd)
heatmap(as.matrix(newdat.std))
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
dat<-read.table('NORMAL_DLY_sample.csv', header=TRUE, row.names = 1)
dat
dat
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
dat<-read.table('NORMAL_DLY_sample.csv', header=TRUE, row.names = 1)
newdat<-cbind(dat$DLY_TMIN_NORMAL, dat$DLY_TMAX_NORMAL)
temp<-as.data.frame(newdat) #轉成 data.frame的指令
colnames(temp)<-c("TMIN", "TMAX")
temp
dat
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
dat<-read.table('NORMAL_DLY_sample.csv', header=TRUE, row.names = 1)
newdat<-cbind(dat$DLY_TMIN_NORMAL, dat$DLY_TMAX_NORMAL)
temp<-as.data.frame(newdat) #轉成 data.frame的指令
colnames(temp)<-c("TMIN", "TMAX")
colnames(temp)<-c("TMIN", "TMAX")
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
dat<-read.table('NORMAL_DLY_sample.csv', header=TRUE, row.names = 1)
newdat<-cbind(dat$DLY_TMIN_NORMAL, dat$DLY_TMAX_NORMAL)
temp<-as.data.frame(newdat) #轉成 data.frame的指令
colnames(temp)<-c("TMIN", "TMAX")
dat
newdat<-cbind(dat$DLY_TMIN_NORMAL, dat$DLY_TMAX_NORMAL)
dat<-read.table('pheno_com.txt', header=TRUE, row.names = 1)
dat<-read.table('pheno_com.txt', header=TRUE, row.names = 1)
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/0929-lab1")
dat<-read.table('pheno_com.txt', header=TRUE, row.names = 1)
dat
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
dat<-read.table('NORMAL_DLY_sample.csv', header=TRUE, row.names = 1)
dat<-read.csv('NORMAL_DLY_sample.csv', header=TRUE, row.names = 1)
dat<-read.csv('NORMAL_DLY_sample.csv', header=TRUE)
dat
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
dat<-read.csv('NORMAL_DLY_sample.csv', header=TRUE)
newdat<-cbind(dat$DLY_TMIN_NORMAL, dat$DLY_TMAX_NORMAL)
temp<-as.data.frame(newdat) #轉成 data.frame的指令
colnames(temp)<-c("TMIN", "TMAX")
temp
plot(temp1, main="my titleee", xlab="xlab bla", ylab="ylab bla")
plot(temp, main="my titleee", xlab="xlab bla", ylab="ylab bla")
plot(temp$TMIN, main="my titleee", xlab="xlab bla", ylab="ylab bla", type='s')
plot(temp$TMAX, type="s")
point(temp$TMAX, type="s")
points(temp$TMAX, type="s")
IN, main="my titleee", xlab="xlab bla", ylab="ylab bla", type='s')
points(temp$TMAX
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
dat<-read.csv('NORMAL_DLY_sample.csv', header=TRUE)
newdat<-cbind(dat$DLY_TMIN_NORMAL, dat$DLY_TMAX_NORMAL)
temp<-as.data.frame(newdat) #轉成 data.frame的指令
colnames(temp)<-c("TMIN", "TMAX")
plot(temp$TMIN, main="my titleee", xlab="xlab bla", ylab="ylab bla", type='s')
points(temp$TMAX, type="s")
setwd("/Users/adrianhsu/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2")
dat<-read.csv('NORMAL_DLY_sample.csv', header=TRUE)
newdat<-cbind(dat$DLY_TMIN_NORMAL, dat$DLY_TMAX_NORMAL)
temp<-as.data.frame(newdat) #轉成 data.frame的指令
colnames(temp)<-c("TMIN", "TMAX")
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue')
points(temp$TMAX, type="s", col='red')
?plot
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', rwd=30)
points(temp$TMAX, type="s", col='red')
?plot
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=30)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=3)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.03)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.9)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.35)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.3)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.02)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.09)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.15)
points(temp$TMAX, type="s", col='red')
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.10)
points(temp$TMAX, type="s", col='red')
ggplot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.10)
plot(temp$TMIN, main="TMIN&TMAX", xlab="date", ylab="temp", type='s', col='blue', asp=0.10)
points(temp$TMAX, type="s", col='red')
rv.normal<-rnorm(n=10000, mean=100, sd=15)
hist(rv.normal, br=20)
rv.normal<-rnorm(n=10000, mean=100, sd=15)
hist(rv.normal, br=20)
rv.binomial<-rbinom(n=10000, size=10, prob=0.8)
hist(rv.binomial, br=20, xlim=c(0, 10))
hist(rv.binomial, br=20
hist(rv.binomial, br=20)
hist(rv.binomial, br=20)
hist(rv.binomial, br=20, xlim=10)
hist(rv.binomial, br=20, xlim=c(0,100))
hist(rv.binomial, br=20, xlim=c(0,20))
hist(rv.binomial, br=20, xlim=c(0,15))
rv.poisson<-rpois(n=10000, lambda=3)
hist(rv.poisson, br=20)
hist(rv.poisson, br=100)
hist(rv.poisson, br=200)
hist(rv.poisson, br=2)
hist(rv.poisson, br=20)
rv.uniform<-runif(n=10000, min=1, max=4)
hist(rv.uniform, br=20)
set.seed(37)
a<-1:5
sample(a, size=5, replace=TRUE)
sample(a, size=3, replace=FALSE)
set.seed(37)
rv.normal<-rnorm(n=10000, mean=100, sd=15)
hist(rv.normal, br=20)
rv.binomial<-rbinom(n=10000, size=10, prob=0.8)
hist(rv.binomial, br=20, xlim=c(0,15))
rv.poisson<-rpois(n=10000, lambda=3)
hist(rv.poisson, br=20)
rv.uniform<-runif(n=10000, min=1, max=4)
hist(rv.uniform, br=20)
set.seed(37)
a<-1:5
#  這種做法是 resampling
sample(a, size=5, replace=TRUE) # 抽取之後放回
sample(a, size=3, replace=FALSE)
# bootstrap
set.seed(37)
rv.normal<-rnorm(n=100, mean=100, sd=15)
mm<-rep(NA, 1000)
for (i in 1:1000){
set.seed(37+i)
rv.normal.boot<-sample(rv.normal, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
hist(mm)
source('~/Google_Drive/NTUEE_106_1/sta/sta2017/1013-lab2/bootstrap.R', echo=TRUE)
set.seed(1)
rv.normal<-rnorm(n=10000, mean=100, sd=15)
hist(rv.normal, br=20)
rv.binomial<-rbinom(n=10000, size=10, prob=0.8)
hist(rv.binomial, br=20, xlim=c(0,15))
rv.poisson<-rpois(n=10000, lambda=3)
hist(rv.poisson, br=20)
rv.uniform<-runif(n=10000, min=1, max=4)
hist(rv.uniform, br=20)
set.seed(37)
a<-1:5
#  這種做法是 resampling
sample(a, size=5, replace=TRUE) # 抽取之後放回
sample(a, size=3, replace=FALSE)
# bootstrap
set.seed(1)
rv.normal<-rnorm(n=100, mean=100, sd=15)
mm<-rep(NA, 1000)
for (i in 1:1000){
set.seed(37+i)
rv.normal.boot<-sample(rv.normal, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
hist(mm)
myboot<-function(x, n.boot){ #不用宣告x, n.boot是啥
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
myboot
res = myboot(rv.normal, 100)
res
?rep
.seed(37) # seed 改了才會影響sample抽樣的順序
rv.normal<-rnorm(n=100, mean=100, sd=15)
mm<-rep(NA, 1000) #rep replicates the values in x. I
for (i in 1:1000){
set.seed(37+i)
rv.normal.boot<-sample(rv.normal, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
quantile(mm, probs=c(
set.seed(37) # seed 改了才會影響sample抽樣的順序
rv.normal<-rnorm(n=100, mean=100, sd=15)
mm<-rep(NA, 1000) #rep replicates the values in x. I
for (i in 1:1000){
set.seed(37+i)
rv.normal.boot<-sample(rv.normal, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
quantile(mm, probs=c(0.025, 0.975))
mean(rv.normal)-1.96*sd(rv.normal)/10
mean(r
# bootstrap
set.seed(37) # seed 改了才會影響sample抽樣的順序
rv.normal<-rnorm(n=100, mean=100, sd=15)
mm<-rep(NA, 1000) #rep replicates the values in x. I
for (i in 1:1000){
set.seed(37+i)
rv.normal.boot<-sample(rv.normal, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
quantile(mm, probs=c(0.025, 0.975))
mean(rv.normal)-1.96*sd(rv.normal)/10
mean(rv.normal)+1.96*sd(rv.normal)/10
res= myboot(NA, 1000)
res= myboot(NA, 1000)
res = myboot(NA, 1000)
myboot<-function(x, n.boot){ #不用宣告x, n.boot是啥型態
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
} hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
rv.normal<-rnorm(n=10000, mean=100, sd=15)
hist(rv.normal, br=20)
rv.binomial<-rbinom(n=10000, size=10, prob=0.8)
hist(rv.binomial, br=20, xlim=c(0,15))
rv.poisson<-rpois(n=10000, lambda=3)
hist(rv.poisson, br=20)
rv.uniform<-runif(n=10000, min=1, max=4)
hist(rv.uniform, br=20)
set.seed(37)
a<-1:5
#  這種做法是 resampling
sample(a, size=5, replace=TRUE) # 抽取之後放回
sample(a, size=3, replace=FALSE)
# bootstrap
set.seed(37) # seed 改了才會影響sample抽樣的順序
rv.normal<-rnorm(n=100, mean=100, sd=15)
mm<-rep(NA, 1000) #rep replicates the values in x. I
for (i in 1:1000){
set.seed(37+i)
rv.normal.boot<-sample(rv.normal, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
quantile(mm, probs=c(0.025, 0.975))
# RESULT:
# > quantile(mm, probs=c(0.025, 0.975))
# 2.5%     97.5%
#   94.90946 100.03599
mean(rv.normal)-1.96*sd(rv.normal)/10
mean(rv.normal)+1.96*sd(rv.normal)/10
# function 寫在哪都可以
myboot<-function(x, n.boot){ #不用宣告x, n.boot是啥型態
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
} hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
res = myboot(NA, 1000)
mean(rv.normal)-1.96*sd(rv.normal)/10
mean(rv.normal)+1.96*sd(rv.normal)/10
myboot<-function(x, n.boot){ #不用宣告x, n.boot是啥型態
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
} hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
myboot<-function(x, n.boot) { #不用宣告x, n.boot是啥型態
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
} hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
myboot<-function(x, n.boot){
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
} hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
myboot<-function(x, n.boot){
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
} hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
strap
set.seed(37) # seed 改了才會影響sample抽樣的順序
rv.normal<-rnorm(n=100, mean=100, sd=15)
mm<-rep(NA, 1000) #rep replicates the values in x. I
for (i in 1:1000){
set.seed(37+i)
rv.normal.boot<-sample(rv.normal, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
quantile(mm, probs=c(0.025, 0.975))
mean(rv.normal)-1.96*sd(rv.normal)/10
mean(rv.normal)+1.96*sd(rv.normal)/10
myboot<-function(x, n.boot) { #不用宣告x, n.boot是啥型態
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
} hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
res = myboot(NA, 1000)
res = myboot(rv.binomial, 1000)
res = myboot(rv.uniform, 1000)
rv.normal<-rnorm(n=100, mean=100, sd=15)
res = myboot(rv.normal, 1000)
res
rv.normal<-rnorm(n=100, mean=100, sd=15)
myboot(rv.normal, n.boot=1000)
myboot(rv.normal, n.boot=5000)
set.seed(37)
+ out.forlp[,i]<-myboot(rv.normal.mat[,i], n.boot=1000) +}
out.forlp[,i]<-myboot(rv.normal.mat[,i], n.boot=1000)
system.time(
for (i in 1:50){
out.forlp[,i]<-myboot(rv.normal.mat[,i], n.boot=1000)
}
system.time(
for (i in 1:50){
out.forlp[,i]<-myboot(rv.normal.mat[,i], n.boot=1000)
}
)
system.time(
for (i in 1:50){
out.forlp[,i]<-myboot(rv.normal.list, n.boot=1000)
}
)
rv.normal<-rnorm(n=10000, mean=100, sd=15)
hist(rv.normal, br=20)
rv.binomial<-rbinom(n=10000, size=10, prob=0.8)
hist(rv.binomial, br=20, xlim=c(0,15))
rv.poisson<-rpois(n=10000, lambda=3)
hist(rv.poisson, br=20)
rv.uniform<-runif(n=10000, min=1, max=4)
hist(rv.uniform, br=20)
set.seed(37)
a<-1:5
#  這種做法是 resampling
sample(a, size=5, replace=TRUE) # 抽取之後放回
sample(a, size=3, replace=FALSE)
# bootstrap
set.seed(37) # seed 改了才會影響sample抽樣的順序
rv.normal<-rnorm(n=100, mean=100, sd=15)
mm<-rep(NA, 1000) #rep replicates the values in x. I
for (i in 1:1000){
set.seed(37+i)
rv.normal.boot<-sample(rv.normal, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
}
quantile(mm, probs=c(0.025, 0.975))
# RESULT:
# > quantile(mm, probs=c(0.025, 0.975))
# 2.5%     97.5%
#   94.90946 100.03599
mean(rv.normal)-1.96*sd(rv.normal)/10
mean(rv.normal)+1.96*sd(rv.normal)/10
# function 寫在哪都可以
myboot<-function(x, n.boot) { #不用宣告x, n.boot是啥型態
mm<-rep(NA, n.boot)
for (i in 1:n.boot){
set.seed(37+i)
rv.normal.boot<-sample(x, replace=TRUE)
mm[i]<-mean(rv.normal.boot)
} hist(mm)
CI.boot<-quantile(mm, probs=c(0.025, 0.975))
return(CI.boot)
}
set.seed(37)
rv.normal<-rnorm(n=100, mean=100, sd=15)
myboot(rv.normal, n.boot=1000)
myboot(rv.normal, n.boot=5000)
